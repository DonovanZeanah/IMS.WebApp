@using IMS.CoreBusiness.Models;

@inject NavigationManager NavigationManager

@foreach (var product in Products)
{
  <tr>
      <td>@product.Name</td>
      <td>@product.Quantity</td>
      <td>@product.Price.ToString("c")</td>
      <td>
          <button type="button"
                class="btn btn-light"
                @onclick="@(() => EditProduct(product.Id))">Edit

                @* 
            @onclick="EditProduct(inv.ProductId)"> [original]
            - use an arrow func for method with param -- (onclick event handler is an event callback - a struct - 
            that wraps around delegate. supposed to assign delegate. method without param works like a delegate.
            attach a parameter and its not a delegate anymore. arrow func provides a delegate, then can call edit 
            inv method within the function.)
            *@                        
          </button>
      </td>
  </tr>
}
@code {

  // pass the Inventories from parent to child through parameter
  [Parameter]
  public List<Product> Products { get; set; } = new List<Product>();

  private void EditProduct(int productId)
  {
    NavigationManager.NavigateTo($"/editproduct/{productId}");
  }



}
