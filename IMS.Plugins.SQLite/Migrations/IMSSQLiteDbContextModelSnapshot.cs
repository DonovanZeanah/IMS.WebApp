// <auto-generated />
using System;
using IMS.Plugins.SQLite.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMS.Plugins.SQLite.Migrations
{
    [DbContext(typeof(IMSSQLiteDbContext))]
    partial class IMSSQLiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("IMS.CoreBusiness.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryName")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            Id = 25,
                            InventoryId = 0,
                            InventoryName = "Steering Wheel",
                            Price = 30.0,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 26,
                            InventoryId = 0,
                            InventoryName = "Driver Seat",
                            Price = 20.0,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 27,
                            InventoryId = 0,
                            InventoryName = "Battery Bank",
                            Price = 12.0,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 28,
                            InventoryId = 0,
                            InventoryName = "Drive Motor",
                            Price = 1.0,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.InventorySource", b =>
                {
                    b.Property<int>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoryId", "SourceId");

                    b.ToTable("InventorySources");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("DiscriminatorID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DiscriminatorIdId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventorySourceInventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("InventorySourceSourceId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DiscriminatorIdId");

                    b.HasIndex("InventorySourceInventoryId", "InventorySourceSourceId");

                    b.ToTable("Sources");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Source");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.SourceDiscriminator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SourceDiscriminator");
                });

            modelBuilder.Entity("IMS.Plugins.SQLite.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Version")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("InventoryInventorySource", b =>
                {
                    b.Property<int>("InventoriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventorySourcesInventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventorySourcesSourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("InventoriesId", "InventorySourcesInventoryId", "InventorySourcesSourceId");

                    b.HasIndex("InventorySourcesInventoryId", "InventorySourcesSourceId");

                    b.ToTable("InventoryInventorySource");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.ContactSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ContactSource");

                    b.HasData(
                        new
                        {
                            Id = 5,
                            DiscriminatorID = 0,
                            Name = "Contact 1",
                            ContactName = "John Doe",
                            PhoneNumber = "555-1234"
                        },
                        new
                        {
                            Id = 6,
                            DiscriminatorID = 0,
                            Name = "Contact 2",
                            ContactName = "Jane Smith",
                            PhoneNumber = "555-5678"
                        });
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.LocationSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("LocationSource");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DiscriminatorID = 0,
                            Name = "Location 1",
                            Address = "123 Main St"
                        },
                        new
                        {
                            Id = 2,
                            DiscriminatorID = 0,
                            Name = "Location 2",
                            Address = "456 Oak St"
                        });
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.SelfObtainedSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("Process")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("SelfObtainedSource");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            DiscriminatorID = 0,
                            Name = "Self Obtained 1",
                            Process = "Manual"
                        },
                        new
                        {
                            Id = 8,
                            DiscriminatorID = 0,
                            Name = "Self Obtained 2",
                            Process = "Automated"
                        });
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.StoreSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("StoreName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("StoreSource");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            DiscriminatorID = 0,
                            Name = "Store 1",
                            StoreName = "Best Mart"
                        },
                        new
                        {
                            Id = 4,
                            DiscriminatorID = 0,
                            Name = "Store 2",
                            StoreName = "Super Store"
                        });
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Inventory", b =>
                {
                    b.HasOne("IMS.CoreBusiness.Models.Source", null)
                        .WithMany("InventorySources")
                        .HasForeignKey("SourceId");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Source", b =>
                {
                    b.HasOne("IMS.CoreBusiness.Models.SourceDiscriminator", "DiscriminatorId")
                        .WithMany()
                        .HasForeignKey("DiscriminatorIdId");

                    b.HasOne("IMS.CoreBusiness.Models.InventorySource", null)
                        .WithMany("Sources")
                        .HasForeignKey("InventorySourceInventoryId", "InventorySourceSourceId");

                    b.Navigation("DiscriminatorId");
                });

            modelBuilder.Entity("InventoryInventorySource", b =>
                {
                    b.HasOne("IMS.CoreBusiness.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("InventoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IMS.CoreBusiness.Models.InventorySource", null)
                        .WithMany()
                        .HasForeignKey("InventorySourcesInventoryId", "InventorySourcesSourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.InventorySource", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Source", b =>
                {
                    b.Navigation("InventorySources");
                });
#pragma warning restore 612, 618
        }
    }
}
