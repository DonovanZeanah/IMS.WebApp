// <auto-generated />
using System;
using IMS.Plugins.SQLite;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMS.Plugins.SQLite.Migrations
{
    [DbContext(typeof(IMSSQLiteDbContext))]
    [Migration("20230428062151_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.16");

            modelBuilder.Entity("IMS.CoreBusiness.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("InventoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("InventoryName")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SourceId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Source", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Source");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Source");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.ContactSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("ContactName")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("ContactSource");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.LocationSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("LocationSource");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.SelfObtainedSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("Process")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("SelfObtainedSource");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.StoreSource", b =>
                {
                    b.HasBaseType("IMS.CoreBusiness.Models.Source");

                    b.Property<string>("StoreName")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("StoreSource");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Inventory", b =>
                {
                    b.HasOne("IMS.CoreBusiness.Models.Source", "Source")
                        .WithMany("Inventories")
                        .HasForeignKey("SourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Source");
                });

            modelBuilder.Entity("IMS.CoreBusiness.Models.Source", b =>
                {
                    b.Navigation("Inventories");
                });
#pragma warning restore 612, 618
        }
    }
}
